name: Deployment Workflow
on:
  push:
    branches:
      - development
      - canary

jobs:
  Development:
    if: ${{ github.ref_name == 'development' }}
    runs-on: ubuntu-latest
    steps:
      - name: "Greetings"
        run: |
          echo "--- Greetings ----"
      
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Create version number"
        run: |
          echo "APP_VERSION=${RANDOM}" >> $GITHUB_ENV

      - name: checks out the repository
        uses: actions/checkout@v3
                     

      - name: "Logs into docker"
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}  
      
      - name: "Build the image"
        run: |
          echo ${{ env.APP_VERSION }}
          sudo docker build -t seun007/booksiread:${{ env.APP_VERSION }} frontend/
              
      - name: "Push the image to docker hub" 
        run: |
            docker push seun007/booksiread:${{ env.APP_VERSION }}

            
      - name: "Setup AWS"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "eu-west-3"
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           

      - name: "Get kubectl"
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.19.3"
        id: install-kubectl

      - name: "Connect to the cluster"
        run: |
          aws eks update-kubeconfig --name Pcluster 
      
      - name: "install Helm"
        uses: azure/setup-helm@v4.2.0
        id: install-helm  
      
      # - name: "Update Install Chart"
      #   run: |
      #     helm upgrade --install bik bik -f bik/values.yaml --set canaryv1image.tag=${{ env.APP_VERSION }} --set canaryv1replicas=4 --set canaryv2replicas=0
      #     helm upgrade --install bik bik -f bik/values.yaml --set canaryv2image.tag=${{ env.APP_VERSION }} --set canaryv1replicas=4 --set canaryv2replicas=0

      - name: "install Sonarqube"
        run: |
          echo -n "your_secret" | openssl dgst -sha256 -hmac "your_key" -binary | base64
          helm repo add sonarqube https://SonarSource.github.io/helm-chart-sonarqube
          helm repo update
          kubectl create namespace sonarqube-dce
          export JWT_SECRET=$(echo -n "your_secret" | openssl dgst -sha256 -hmac "your_key" -binary | base64)
          helm upgrade --install -n sonarqube-dce sonarqube sonarqube/sonarqube-dce --set ApplicationNodes.jwtSecret=$JWT_SECRET
          
  # canary:
  #   if: ${{ github.ref_name == 'canary' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: "Greeting"
  #       run: |
  #         echo "--- Greetings ----"
      
  #     - name: "Checkout"
  #       uses: actions/checkout@v4
  #     - name: "Create version number"
  #       run: |
  #         echo "APP_VERSION=${RANDOM}" >> $GITHUB_ENV
          
  #     - name: "Logs into docker"
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_PASSWORD }}     

  #     - name: "Build the image"
  #       run: |
  #         echo ${{ env.APP_VERSION }}
  #         sudo docker build -t seun007/booksiread:${{ env.APP_VERSION }} frontend/
              
  #     - name: "Push the image to docker hub" 
  #       run: |
  #           docker push seun007/booksiread:${{ env.APP_VERSION }}

  #     - name: "Setup AWS"
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-region: "us-east-1"
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  #     - name: "Get kubectl"
  #       uses: azure/setup-kubectl@v3
  #       with:
  #         version: "v1.19.3"
  #       id: install-kubectl

  #     - name: "Connect to the cluster"
  #       run: |
  #         aws eks update-kubeconfig --name Pcluster 
      
  #     - name: "install Helm"
  #       uses: azure/setup-helm@v4.2.0
  #       id: install-helm  
      
  #     - name: "Update Install Chart"
  #       run: |
          # helm upgrade --install bik bik -f bik/values.yaml --set canaryv2image.tag=${{ env.APP_VERSION }} --set canaryv1replicas=2 --set canaryv2replicas=2
          

      # - name: "Annouce the latest version of the deployment"
      #   uses: dawidd6/acti on-send-mail@v3
      #   with:
      #     username: sadiboseun2013@gmail.com
      #     password: ${{ secrets.EMAIL_PASSWORD }}
      #     server_address: smtp.gmail.com
      #     server_port: 465
      #     secure: true
      #     subject: "New Docker Image Version for Simple Web App"
      #     to: "sadiboseun2013@gmail.com"
      #     from: Sadibo Seun <sadiboseun2013@gmail.com>
      #     body: "New image build: ${{ env.APP_VERSION }}"     
          

      